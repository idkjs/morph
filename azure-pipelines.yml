name: Build master - $(Build.BuildId)

trigger:
  branches:
    include:
    - master

stages:
- stage: Build
  jobs:
  - job: Linux
    pool:
      vmImage: ubuntu-latest
    variables:
      CACHE_FOLDER: $(Pipeline.Workspace)/cache
      ESY__CACHE_INSTALL_PATH: /home/vsts/.esy/3_____________________________________________________________________/i
    steps:
    - template: .ci/build-platform.yml
      parameters:
        installFolderPath: "/3______________________________________________________________/i"
    - template: .ci/build-docs.yml
    - template: .ci/utils/prepare-cache.yml

  - job: macOS
    pool:
      vmImage: macOS-latest
    variables:
      CACHE_FOLDER: $(Pipeline.Workspace)/cache
      ESY__CACHE_INSTALL_PATH: /Users/vsts/.esy/3____________________________________________________________________/i
    steps:
    - template: .ci/build-platform.yml
    - template: .ci/utils/prepare-cache.yml
      parameters:
        installFolderPath: "/3_______________________________________________/i"

  # - job: Windows
  #   pool:
  #     vmImage: windows-latest
  #   variables:
  #     ESY__PREFIX: $(Pipeline.Workspace)\.esy
  #   steps:
  #   - template: .ci/build-platform.yml
  #     parameters:
  #       esyLockPath: $(Build.SourcesDirectory)\esy.lock\index.json
  #       installFolderPath: \3_

- stage: Build_NPM
  displayName: Build NPM packages
  dependsOn: []
  jobs:
  - job:
    pool:
      vmImage: ubuntu-latest
    variables:
      CACHE_FOLDER: $(Pipeline.Workspace)/cache
      ESY__CACHE_INSTALL_PATH: /home/vsts/.esy/3_____________________________________________________________________/i
    strategy:
      matrix: {
        "morph_graphql_server": {package_name: "morph_graphql_server"},
        "morph_server_base": {package_name: "morph_server_base"},
        "morph_server_http": {package_name: "morph_server_http"},
        "morph_server_https": {package_name: "morph_server_https"},
        "morph": {package_name: "morph"},
        "morph_base": {package_name: "morph_base"}
      }
    steps:
    - template: .ci/create-npm-package.yml
      parameters:
        package_name: $(package_name)

- stage: Publish_docs
  displayName: Publish documentation
  dependsOn: [Build]
  jobs:
  - deployment: Publish_docs
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    displayName: Publish docs to Github
    environment: gh-pages
    pool:
      vmImage: ubuntu-16.04
    strategy:
      runOnce:
        deploy:
          steps:
            - template: .ci/publish-api-docs.yml
  - deployment: Upstream_docs
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    displayName: Upstream docs to reason-native-web.github.io
    environment: reason-native-web_github_io
    pool:
      vmImage: ubuntu-16.04
    strategy:
      runOnce:
        deploy:
          steps:
            - template: .ci/upstream-docs.yml
